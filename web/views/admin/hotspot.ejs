<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= settings && settings.company_header ? settings.company_header : 'Alijaya Network' %></title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap Icons -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <!-- Custom CSS -->
    <link href="/css/style.css" rel="stylesheet">

    <style>
        :root {
            --primary-color: #2563eb;
            --secondary-color: #64748b;
            --success-color: #10b981;
            --danger-color: #ef4444;
            --warning-color: #f59e0b;
            --info-color: #06b6d4;
            --dark-color: #1e293b;
            --light-color: #f8fafc;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background-color: var(--light-color);
            color: var(--dark-color);
        }

        .navbar-brand {
            font-weight: 700;
            color: var(--primary-color) !important;
        }

        .sidebar {
            background: linear-gradient(135deg, var(--primary-color), #3b82f6);
            min-height: 100vh;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar .nav-link {
            color: rgba(255,255,255,0.8);
            padding: 0.75rem 1.5rem;
            margin: 0.25rem 0;
            border-radius: 0.5rem;
            transition: all 0.3s ease;
        }

        .sidebar .nav-link:hover,
        .sidebar .nav-link.active {
            color: white;
            background-color: rgba(255,255,255,0.1);
            transform: translateX(5px);
        }

        .sidebar .nav-link i {
            margin-right: 0.75rem;
            width: 20px;
        }

        .main-content {
            background-color: white;
            border-radius: 1rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.05);
            margin: 1rem;
            padding: 2rem;
        }

        .card {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .btn {
            border-radius: 0.75rem;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), #3b82f6);
            border: none;
        }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(37, 99, 235, 0.3);
        }

        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 1rem;
            padding: 1.5rem;
        }

        .stat-card.success {
            background: linear-gradient(135deg, var(--success-color), #059669);
        }

        .stat-card.warning {
            background: linear-gradient(135deg, var(--warning-color), #d97706);
        }

        .stat-card.danger {
            background: linear-gradient(135deg, var(--danger-color), #dc2626);
        }

        .stat-card.info {
            background: linear-gradient(135deg, var(--info-color), #0891b2);
        }

        .clickable-card {
            transition: all 0.2s ease;
        }

        .clickable-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .clickable-card:active {
            transform: translateY(0);
        }

        @media (max-width: 768px) {
            .sidebar {
                position: fixed;
                top: 0;
                left: -100%;
                width: 280px;
                z-index: 1050;
                transition: left 0.3s ease;
            }

            .sidebar.show {
                left: 0;
            }

            .main-content {
                margin: 0.5rem;
                padding: 1rem;
            }

            .mobile-menu-btn {
                display: block !important;
            }
        }

        .mobile-menu-btn {
            display: none;
        }

        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1040;
        }

        .overlay.show {
            display: block;
        }
    </style>
</head>
<body>
    <!-- Mobile Menu Button -->
    <button class="btn btn-primary mobile-menu-btn position-fixed" style="top: 1rem; left: 1rem; z-index: 1060;" onclick="toggleSidebar()">
        <i class="bi bi-list"></i>
    </button>

    <!-- Overlay for mobile -->
    <div class="overlay" id="overlay" onclick="toggleSidebar()"></div>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <nav class="col-md-3 col-lg-2 d-md-block sidebar" id="sidebar">
                <div class="position-sticky pt-3">
                    <div class="text-center mb-4">
                        <h4 class="text-white fw-bold">
                            <i class="bi bi-wifi"></i> <%= settings && settings.company_header ? settings.company_header : 'Alijaya' %>
                        </h4>
                        <% if (user) { %>
                            <small class="text-white-50">
                                <%= (user && user.isAdmin) ? (settings && settings.footer_info ? settings.footer_info : 'Admin Panel') : 'Customer Portal' %>
                            </small>
                        <% } %>
                    </div>

                    <ul class="nav flex-column">
                        <%- include('../partials/sidebar') %>
                    </ul>
                        
                        <!-- System Info -->
                        <div class="mt-4 pt-3 border-top border-light border-opacity-25">
                            <small class="text-white-50 d-block mb-2">System Info</small>
                            <div class="text-white-50 small">
                                <div class="d-flex justify-content-between">
                                    <span>Uptime:</span>
                                    <span id="systemUptime">-</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>Memory:</span>
                                    <span id="systemMemory">-</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <span>CPU:</span>
                                    <span id="systemCPU">-</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Logout -->
                        <div class="mt-4 pt-3 border-top border-light border-opacity-25">
                            <form action="/auth/logout" method="POST" class="d-inline w-100">
                                <button type="submit" class="btn btn-outline-light btn-sm w-100">
                                    <i class="bi bi-box-arrow-right"></i> Logout
                                </button>
                            </form>
                        </div>
                    </div>
                </nav>
                
            <!-- Main content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
                <div class="main-content">
                    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                        <h1 class="h2"><i class="bi bi-wifi"></i> Hotspot Management</h1>
                        <div class="btn-toolbar mb-2 mb-md-0">
                            <div class="btn-group me-2">
                                <button type="button" class="btn btn-sm btn-outline-primary" onclick="refreshHotspot()">
                                    <i class="bi bi-arrow-clockwise"></i> Refresh
                                </button>
                                <button type="button" class="btn btn-sm btn-primary" onclick="showAddHotspotModal()">
                                    <i class="bi bi-plus-circle"></i> Add User
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Hotspot Statistics -->
                    <div class="row mb-4">
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card success">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <div class="text-white-50 small">Active Users</div>
                                            <div class="h4 mb-0 text-white" id="activeHotspotUsers">
                                                <%= activeUsers ? activeUsers.length : 0 %>
                                            </div>
                                        </div>
                                        <div class="align-self-center">
                                            <i class="bi bi-person-check fs-2 text-white-50"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card info">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <div class="text-white-50 small">Total Users</div>
                                            <div class="h4 mb-0 text-white" id="totalHotspotUsers">
                                                <%= totalUsers || 0 %>
                                            </div>
                                        </div>
                                        <div class="align-self-center">
                                            <i class="bi bi-people fs-2 text-white-50"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card warning">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <div class="text-white-50 small">Data Profile</div>
                                            <div class="h4 mb-0 text-white" id="totalHotspotProfiles">
                                                <%= profiles ? profiles.length : 0 %>
                                            </div>
                                        </div>
                                        <div class="align-self-center">
                                            <i class="bi bi-person-badge fs-2 text-white-50"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-xl-3 col-md-6 mb-4">
                            <div class="card stat-card danger clickable-card" onclick="showGenerateVoucherModal()" style="cursor: pointer;">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <div class="text-white-50 small">Generate Vouchers</div>
                                            <div class="h6 mb-0 text-white">Click to Generate</div>
                                        </div>
                                        <div class="align-self-center">
                                            <i class="bi bi-ticket-perforated fs-2 text-white-50"></i>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Hotspot Monitoring Status -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0"><i class="bi bi-activity"></i> Monitoring Status</h5>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <table class="table table-borderless">
                                                <tr>
                                                    <td><strong>Hotspot Status:</strong></td>
                                                    <td>
                                                        <span class="badge bg-success">Active</span>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Server Pool:</strong></td>
                                                    <td>dhcp_pool0</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Interface:</strong></td>
                                                    <td>bridge</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Address Pool:</strong></td>
                                                    <td>192.168.1.100-192.168.1.200</td>
                                                </tr>
                                            </table>
                                        </div>
                                        <div class="col-md-6">
                                            <table class="table table-borderless">
                                                <tr>
                                                    <td><strong>Profile Count:</strong></td>
                                                    <td><%= profiles ? profiles.length : 0 %></td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Session Timeout:</strong></td>
                                                    <td>24 hours</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Idle Timeout:</strong></td>
                                                    <td>30 minutes</td>
                                                </tr>
                                                <tr>
                                                    <td><strong>Login Page:</strong></td>
                                                    <td><span class="badge bg-info">Custom</span></td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Hotspot User Search & Management -->
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h5 class="card-title mb-0"><i class="bi bi-search"></i> Search Hotspot Users</h5>
                                </div>
                                <div class="card-body">
                                    <!-- Search Form -->
                                    <div class="row mb-4">
                                        <div class="col-md-8">
                                            <div class="input-group">
                                                <input type="text" class="form-control" id="searchHotspotUsername" placeholder="Enter username to search..." onkeypress="handleHotspotSearchKeyPress(event)">
                                                <button class="btn btn-primary" type="button" onclick="searchHotspotUser()">
                                                    <i class="bi bi-search"></i> Search
                                                </button>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <button class="btn btn-outline-secondary w-100" onclick="loadAllHotspotUsers()">
                                                <i class="bi bi-list"></i> Show All Users
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Search Results -->
                                    <div id="hotspotSearchResults" style="display: none;">
                                        <h6><i class="bi bi-person-check"></i> Search Results</h6>
                                        <div class="table-responsive">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Username</th>
                                                        <th>Profile</th>
                                                        <th>Status</th>
                                                        <th>Last Login</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="hotspotSearchResultsBody">
                                                    <!-- Search results will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- All Users List -->
                                    <div id="hotspotAllUsersList" style="display: none;">
                                        <h6><i class="bi bi-people"></i> All Hotspot Users</h6>
                                        <div class="table-responsive">
                                            <table class="table table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Username</th>
                                                        <th>Profile</th>
                                                        <th>Status</th>
                                                        <th>Last Login</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="hotspotAllUsersBody">
                                                    <!-- All users will be populated here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>

                                    <!-- No Results Message -->
                                    <div id="hotspotNoResults" class="text-center py-4" style="display: none;">
                                        <i class="bi bi-exclamation-circle fs-1 text-muted"></i>
                                        <p class="text-muted mt-2">No users found. Try a different search term.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </main>
        </div>
    </div>

    <!-- Add Hotspot User Modal -->
    <div class="modal fade" id="addHotspotModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Hotspot User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addHotspotForm">
                        <div class="mb-3">
                            <label for="hotspotUsername" class="form-label">Username</label>
                            <input type="text" class="form-control" id="hotspotUsername" required>
                        </div>
                        <div class="mb-3">
                            <label for="hotspotPassword" class="form-label">Password</label>
                            <input type="password" class="form-control" id="hotspotPassword" required>
                        </div>
                        <div class="mb-3">
                            <label for="hotspotProfile" class="form-label">Profile</label>
                            <select class="form-select" id="hotspotProfile" required>
                                <option value="">Select Profile</option>
                                <% if (profiles && profiles.length > 0) { %>
                                    <% profiles.forEach(profile => { %>
                                        <option value="<%= profile.name %>"><%= profile.name %></option>
                                    <% }); %>
                                <% } else { %>
                                    <option value="default">default</option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="hotspotServer" class="form-label">Server</label>
                            <select class="form-select" id="hotspotServer">
                                <option value="hotspot1">hotspot1</option>
                                <option value="all">all</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="addHotspotUser()">Add User</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Hotspot User Modal -->
    <div class="modal fade" id="editHotspotModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Hotspot User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editHotspotForm">
                        <input type="hidden" id="editHotspotId">
                        <div class="mb-3">
                            <label for="editHotspotUsername" class="form-label">Username</label>
                            <input type="text" class="form-control" id="editHotspotUsername" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="editHotspotPassword" class="form-label">New Password</label>
                            <input type="password" class="form-control" id="editHotspotPassword">
                            <small class="form-text text-muted">Leave empty to keep current password</small>
                        </div>
                        <div class="mb-3">
                            <label for="editHotspotProfile" class="form-label">Profile</label>
                            <select class="form-select" id="editHotspotProfile">
                                <% if (profiles && profiles.length > 0) { %>
                                    <% profiles.forEach(profile => { %>
                                        <option value="<%= profile.name %>"><%= profile.name %></option>
                                    <% }); %>
                                <% } else { %>
                                    <option value="default">default</option>
                                <% } %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="editHotspotDisabled">
                                <label class="form-check-label" for="editHotspotDisabled">
                                    Disable User
                                </label>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="updateHotspotUser()">Update User</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Generate Voucher Modal -->
    <div class="modal fade" id="generateVoucherModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generate Hotspot Vouchers</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="generateVoucherForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherProfile" class="form-label">Profile</label>
                                    <select class="form-select" id="voucherProfile" required>
                                        <option value="">Select Profile</option>
                                        <% if (profiles && profiles.length > 0) { %>
                                            <% profiles.forEach(profile => { %>
                                                <option value="<%= profile.name %>"><%= profile.name %></option>
                                            <% }); %>
                                        <% } else { %>
                                            <option value="default">default</option>
                                        <% } %>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherCount" class="form-label">Jumlah Voucher</label>
                                    <input type="number" class="form-control" id="voucherCount" min="1" max="100" value="10" required>
                                    <div class="form-text">Maksimal 100 voucher per generate</div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherType" class="form-label">Tipe Voucher</label>
                                    <select class="form-select" id="voucherType" onchange="togglePasswordOptions()">
                                        <option value="voucher">Voucher Saja (Username = Password)</option>
                                        <option value="userpass">User & Password Terpisah</option>
                                    </select>
                                    <div class="form-text">Pilih format login yang diinginkan</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherFormat" class="form-label">Format Username</label>
                                    <select class="form-select" id="voucherFormat" onchange="updateUsernamePreview()">
                                        <option value="alphanumeric">Huruf + Angka (HSP001)</option>
                                        <option value="numbers">Angka Saja (001234)</option>
                                        <option value="letters">Huruf Saja (ABCDEF)</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherPrefix" class="form-label">Prefix Username</label>
                                    <input type="text" class="form-control" id="voucherPrefix" value="HSP" maxlength="5" onkeyup="updateUsernamePreview()">
                                    <div class="form-text" id="usernamePreview">Contoh: HSP001, HSP002, dst.</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherNumberLength" class="form-label">Panjang Angka/Nomor</label>
                                    <div class="input-group">
                                        <select class="form-select" id="voucherNumberLength" onchange="handleNumberLengthChange()" style="max-width: 120px;">
                                            <option value="3">3 Digit</option>
                                            <option value="4">4 Digit</option>
                                            <option value="5">5 Digit</option>
                                            <option value="6" selected>6 Digit</option>
                                            <option value="7">7 Digit</option>
                                            <option value="8">8 Digit</option>
                                            <option value="custom">Custom</option>
                                        </select>
                                        <input type="number" class="form-control" id="voucherNumberLengthCustom" min="1" max="15" value="6" style="display: none;" onchange="updateUsernamePreview()">
                                    </div>
                                    <div class="form-text">Panjang angka untuk voucher/username</div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="passwordLengthSection">
                                <div class="mb-3">
                                    <label for="voucherLength" class="form-label">Panjang Password</label>
                                    <select class="form-select" id="voucherLength">
                                        <option value="6">6 Karakter</option>
                                        <option value="8" selected>8 Karakter</option>
                                        <option value="10">10 Karakter</option>
                                        <option value="12">12 Karakter</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherModel" class="form-label">Model Voucher</label>
                                    <select class="form-select" id="voucherModel" onchange="showVoucherPreview()">
                                        <option value="classic">Classic Blue</option>
                                        <option value="dark">Dark Modern</option>
                                        <option value="gradient">Gradient Pro</option>
                                        <option value="minimal">Minimal Black</option>
                                        <option value="neon">Neon Tech</option>
                                    </select>
                                    <div class="form-text">Pilih desain voucher yang diinginkan</div>
                                </div>
                            </div>
                        </div>

                        <!-- Voucher Preview -->
                        <div class="row">
                            <div class="col-12">
                                <div class="mb-3">
                                    <label class="form-label">Preview Voucher</label>
                                    <div id="voucherPreview" class="border rounded p-3 bg-light" style="min-height: 120px;">
                                        <div class="text-center text-muted">
                                            <i class="bi bi-eye"></i> Preview akan muncul di sini
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="voucherPrice" class="form-label">Harga Voucher</label>
                                    <div class="input-group">
                                        <span class="input-group-text">Rp</span>
                                        <input type="number" class="form-control" id="voucherPrice" placeholder="5000" min="0" step="500">
                                    </div>
                                    <div class="form-text">Harga akan ditampilkan di voucher yang dicetak</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <div class="form-check mt-4">
                                        <input class="form-check-input" type="checkbox" id="showPrice" checked>
                                        <label class="form-check-label" for="showPrice">
                                            Tampilkan harga di voucher
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="voucherPrintable" checked>
                                        <label class="form-check-label" for="voucherPrintable">
                                            Generate format yang bisa di-print
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="generateVouchers()">
                        <i class="bi bi-ticket-perforated"></i> Generate & Preview
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Voucher Result Modal -->
    <div class="modal fade" id="voucherResultModal" tabindex="-1">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Generated Vouchers</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <div>
                            <strong>Profile:</strong> <span id="resultProfile"></span> |
                            <strong>Total:</strong> <span id="resultCount"></span> vouchers
                        </div>
                    </div>
                    <div id="voucherList" class="table-responsive">
                        <!-- Voucher list will be populated here -->
                    </div>
                </div>
                <div class="modal-footer" id="voucherResultFooter">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Custom JS -->
    <script src="/js/app.js"></script>

    <script>
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');

            sidebar.classList.toggle('show');
            overlay.classList.toggle('show');
        }

        function refreshHotspot() {
            AlijayaWeb.showToast('Refreshing hotspot data...', 'info');
            setTimeout(() => {
                location.reload();
            }, 1000);
        }

        function showAddHotspotModal() {
            const modal = new bootstrap.Modal(document.getElementById('addHotspotModal'));
            modal.show();
        }

        function showGenerateVoucherModal() {
            const modal = new bootstrap.Modal(document.getElementById('generateVoucherModal'));
            modal.show();
            updateUsernamePreview(); // Initialize preview
            showVoucherPreview(); // Initialize voucher preview
        }

        function togglePasswordOptions() {
            const voucherType = document.getElementById('voucherType').value;
            const passwordSection = document.getElementById('passwordLengthSection');

            if (voucherType === 'voucher') {
                passwordSection.style.display = 'none';
            } else {
                passwordSection.style.display = 'block';
            }
        }

        function handleNumberLengthChange() {
            const lengthSelect = document.getElementById('voucherNumberLength');
            const customInput = document.getElementById('voucherNumberLengthCustom');

            if (lengthSelect.value === 'custom') {
                customInput.style.display = 'block';
                lengthSelect.style.maxWidth = '80px';
            } else {
                customInput.style.display = 'none';
                lengthSelect.style.maxWidth = '120px';
            }

            updateUsernamePreview();
        }

        function getNumberLength() {
            const lengthSelect = document.getElementById('voucherNumberLength');
            const customInput = document.getElementById('voucherNumberLengthCustom');

            if (lengthSelect.value === 'custom') {
                return parseInt(customInput.value) || 6;
            } else {
                return parseInt(lengthSelect.value);
            }
        }

        function updateUsernamePreview() {
            const format = document.getElementById('voucherFormat').value;
            const prefix = document.getElementById('voucherPrefix').value || '';
            const numberLength = getNumberLength();
            const previewElement = document.getElementById('usernamePreview');

            let example1, example2, example3;

            switch (format) {
                case 'numbers':
                    // Show random number examples
                    example1 = generateRandomNumberExample(numberLength);
                    example2 = generateRandomNumberExample(numberLength);
                    example3 = generateRandomNumberExample(numberLength);
                    break;
                case 'letters':
                    // Show random letter examples
                    example1 = generateRandomLetterExample(numberLength);
                    example2 = generateRandomLetterExample(numberLength);
                    example3 = generateRandomLetterExample(numberLength);
                    break;
                case 'alphanumeric':
                default:
                    // Show prefix + random number examples
                    example1 = prefix + generateRandomNumberExample(numberLength);
                    example2 = prefix + generateRandomNumberExample(numberLength);
                    example3 = prefix + generateRandomNumberExample(numberLength);
                    break;
            }

            previewElement.innerHTML = `<strong>Contoh (acak):</strong> ${example1}, ${example2}, ${example3}`;
        }

        function generateRandomNumberExample(length) {
            let result = '';
            for (let i = 0; i < length; i++) {
                if (i === 0) {
                    result += Math.floor(Math.random() * 9) + 1; // 1-9 for first digit
                } else {
                    result += Math.floor(Math.random() * 10); // 0-9 for other digits
                }
            }
            return result;
        }

        function generateRandomLetterExample(length) {
            const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += letters.charAt(Math.floor(Math.random() * letters.length));
            }
            return result;
        }

        function showVoucherPreview() {
            const model = document.getElementById('voucherModel').value;
            const voucherType = document.getElementById('voucherType').value;
            const profile = document.getElementById('voucherProfile').value || 'Sample';
            const previewContainer = document.getElementById('voucherPreview');

            const isVoucherType = voucherType === 'voucher';
            const sampleUsername = isVoucherType ? 'HSP847' : 'HSP847';
            const samplePassword = isVoucherType ? 'HSP847' : 'Kx9mP2qR';

            let previewHTML = '';

            switch (model) {
                case 'classic':
                    previewHTML = getClassicVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
                    break;
                case 'dark':
                    previewHTML = getDarkVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
                    break;
                case 'gradient':
                    previewHTML = getGradientVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
                    break;
                case 'minimal':
                    previewHTML = getMinimalVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
                    break;
                case 'neon':
                    previewHTML = getNeonVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
                    break;
                default:
                    previewHTML = getClassicVoucherPreview(sampleUsername, samplePassword, profile, isVoucherType);
            }

            previewContainer.innerHTML = previewHTML;
        }

        function getClassicVoucherPreview(username, password, profile, isVoucherType) {
            const price = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            return `
                <div style="width: 200px; height: 120px; border: 2px dashed #333; border-radius: 8px; padding: 8px; background: white; font-family: Arial; font-size: 10px;">
                    <div style="text-align: center; background: rgba(0,123,255,0.1); color: #000; padding: 2px; border-radius: 4px; margin-bottom: 4px; font-size: 8px; font-weight: bold; border: 1px solid #007bff;">
                        📡 ALIJAYA NETWORK
                    </div>
                    <div style="text-align: center; font-size: 9px; font-weight: bold; color: #000; margin-bottom: 3px;">
                        ${isVoucherType ? '🎫 VOUCHER INTERNET' : '👤 AKUN INTERNET'}
                    </div>
                    <div style="background: rgba(248,249,250,0.5); padding: 2px 4px; border-radius: 3px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">${isVoucherType ? '🔑 KODE:' : '👤 USER:'}</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${username}</span>
                    </div>
                    ${!isVoucherType ? `
                    <div style="background: rgba(248,249,250,0.5); padding: 2px 4px; border-radius: 3px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">🔐 PASS:</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${password}</span>
                    </div>` : ''}
                    <div style="text-align: center; background: rgba(227,242,253,0.3); padding: 1px; border-radius: 2px; font-size: 7px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #ccc;">
                        📦 Paket: ${profile}
                    </div>
                    ${showPrice && price ? `
                    <div style="text-align: center; background: rgba(40,167,69,0.1); padding: 2px; border-radius: 3px; font-size: 11px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #28a745;">
                        💰 Rp ${parseInt(price).toLocaleString('id-ID')}
                    </div>` : ''}
                    <div style="font-size: 6px; color: #000; text-align: center; margin-top: 2px;">
                        📱 Hubungkan WiFi → 🌐 Buka Browser → 🔑 Login
                    </div>
                </div>
            `;
        }

        function getDarkVoucherPreview(username, password, profile, isVoucherType) {
            const price = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            return `
                <div style="width: 200px; height: 120px; border: 2px solid #333; border-radius: 8px; padding: 8px; background: white; color: #000; font-family: Arial; font-size: 10px;">
                    <div style="text-align: center; background: rgba(231,76,60,0.1); color: #000; padding: 2px; border-radius: 4px; margin-bottom: 4px; font-size: 8px; font-weight: bold; border: 1px solid #e74c3c;">
                        ⚡ ALIJAYA NETWORK
                    </div>
                    <div style="text-align: center; font-size: 9px; font-weight: bold; color: #000; margin-bottom: 3px;">
                        ${isVoucherType ? '🎯 VOUCHER INTERNET' : '🔐 AKUN INTERNET'}
                    </div>
                    <div style="background: rgba(255,255,255,0.3); padding: 2px 4px; border-radius: 3px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">${isVoucherType ? '🎫 KODE:' : '👤 USER:'}</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${username}</span>
                    </div>
                    ${!isVoucherType ? `
                    <div style="background: rgba(255,255,255,0.3); padding: 2px 4px; border-radius: 3px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">🔒 PASS:</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${password}</span>
                    </div>` : ''}
                    <div style="text-align: center; background: rgba(52,152,219,0.1); padding: 1px; border-radius: 2px; font-size: 7px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #3498db;">
                        🚀 Paket: ${profile}
                    </div>
                    ${showPrice && price ? `
                    <div style="text-align: center; background: rgba(40,167,69,0.1); padding: 2px; border-radius: 3px; font-size: 11px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #28a745;">
                        💰 Rp ${parseInt(price).toLocaleString('id-ID')}
                    </div>` : ''}
                    <div style="font-size: 6px; color: #000; text-align: center; margin-top: 2px;">
                        📶 Connect WiFi → 🌐 Open Browser → ⚡ Login
                    </div>
                </div>
            `;
        }

        function getGradientVoucherPreview(username, password, profile, isVoucherType) {
            const price = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            return `
                <div style="width: 200px; height: 120px; border: 2px solid #8e44ad; border-radius: 12px; padding: 8px; background: white; color: #000; font-family: Arial; font-size: 10px;">
                    <div style="text-align: center; background: rgba(240,147,251,0.2); color: #000; padding: 2px; border-radius: 6px; margin-bottom: 4px; font-size: 8px; font-weight: bold; border: 1px solid #f093fb;">
                        💎 ALIJAYA NETWORK
                    </div>
                    <div style="text-align: center; font-size: 9px; font-weight: bold; color: #000; margin-bottom: 3px;">
                        ${isVoucherType ? '✨ VOUCHER INTERNET' : '🎭 AKUN INTERNET'}
                    </div>
                    <div style="background: rgba(255,255,255,0.5); padding: 2px 4px; border-radius: 6px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">${isVoucherType ? '🌟 KODE:' : '👑 USER:'}</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${username}</span>
                    </div>
                    ${!isVoucherType ? `
                    <div style="background: rgba(255,255,255,0.5); padding: 2px 4px; border-radius: 6px; margin: 1px 0; border: 1px solid #ddd;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">🔮 PASS:</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${password}</span>
                    </div>` : ''}
                    <div style="text-align: center; background: rgba(255,255,255,0.3); padding: 1px; border-radius: 4px; font-size: 7px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #ccc;">
                        🎯 Paket: ${profile}
                    </div>
                    ${showPrice && price ? `
                    <div style="text-align: center; background: rgba(40,167,69,0.1); padding: 2px; border-radius: 3px; font-size: 11px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #28a745;">
                        💰 Rp ${parseInt(price).toLocaleString('id-ID')}
                    </div>` : ''}
                    <div style="font-size: 6px; color: #000; text-align: center; margin-top: 2px;">
                        📡 Connect WiFi → 🌐 Open Browser → ✨ Login
                    </div>
                </div>
            `;
        }

        function getMinimalVoucherPreview(username, password, profile, isVoucherType) {
            const price = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            return `
                <div style="width: 200px; height: 120px; border: 3px solid #000; border-radius: 4px; padding: 8px; background: white; color: #000; font-family: 'Courier New', monospace; font-size: 10px;">
                    <div style="text-align: center; background: rgba(255,255,255,0.8); color: #000; padding: 2px; border-radius: 2px; margin-bottom: 4px; font-size: 8px; font-weight: bold; letter-spacing: 1px; border: 1px solid #000;">
                        ▲ ALIJAYA NETWORK ▲
                    </div>
                    <div style="text-align: center; font-size: 9px; font-weight: bold; color: #000; margin-bottom: 3px; letter-spacing: 0.5px;">
                        ${isVoucherType ? '■ VOUCHER INTERNET ■' : '● AKUN INTERNET ●'}
                    </div>
                    <div style="background: rgba(51,51,51,0.1); padding: 2px 4px; border-radius: 2px; margin: 1px 0; border: 1px solid #333;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">${isVoucherType ? '► KODE:' : '► USER:'}</span>
                        <span style="font-family: 'Courier New', monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${username}</span>
                    </div>
                    ${!isVoucherType ? `
                    <div style="background: rgba(51,51,51,0.1); padding: 2px 4px; border-radius: 2px; margin: 1px 0; border: 1px solid #333;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">► PASS:</span>
                        <span style="font-family: 'Courier New', monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${password}</span>
                    </div>` : ''}
                    <div style="text-align: center; background: rgba(34,34,34,0.1); padding: 1px; border-radius: 2px; font-size: 7px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #222;">
                        ◆ PAKET: ${profile} ◆
                    </div>
                    ${showPrice && price ? `
                    <div style="text-align: center; background: rgba(40,167,69,0.1); padding: 2px; border-radius: 2px; font-size: 11px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #28a745;">
                        ► Rp ${parseInt(price).toLocaleString('id-ID')} ◄
                    </div>` : ''}
                    <div style="font-size: 6px; color: #000; text-align: center; margin-top: 2px; letter-spacing: 0.3px;">
                        [1] WIFI → [2] BROWSER → [3] LOGIN
                    </div>
                </div>
            `;
        }

        function getNeonVoucherPreview(username, password, profile, isVoucherType) {
            const price = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            return `
                <div style="width: 200px; height: 120px; border: 2px solid #00ffff; border-radius: 8px; padding: 8px; background: white; color: #000; font-family: Arial; font-size: 10px;">
                    <div style="text-align: center; background: rgba(255,0,110,0.1); color: #000; padding: 2px; border-radius: 4px; margin-bottom: 4px; font-size: 8px; font-weight: bold; border: 1px solid #ff006e;">
                        🔥 ALIJAYA NETWORK 🔥
                    </div>
                    <div style="text-align: center; font-size: 9px; font-weight: bold; color: #000; margin-bottom: 3px;">
                        ${isVoucherType ? '⚡ VOUCHER INTERNET ⚡' : '🎮 AKUN INTERNET 🎮'}
                    </div>
                    <div style="background: rgba(0,255,255,0.1); padding: 2px 4px; border-radius: 4px; margin: 1px 0; border: 1px solid #00ffff;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">${isVoucherType ? '🎯 KODE:' : '🎮 USER:'}</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${username}</span>
                    </div>
                    ${!isVoucherType ? `
                    <div style="background: rgba(0,255,255,0.1); padding: 2px 4px; border-radius: 4px; margin: 1px 0; border: 1px solid #00ffff;">
                        <span style="font-size: 7px; color: #000; font-weight: bold;">🔐 PASS:</span>
                        <span style="font-family: monospace; font-weight: bold; font-size: 12px; color: #000; float: right;">${password}</span>
                    </div>` : ''}
                    <div style="text-align: center; background: rgba(255,0,110,0.1); padding: 1px; border-radius: 3px; font-size: 7px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #ff006e;">
                        🚀 PAKET: ${profile} 🚀
                    </div>
                    ${showPrice && price ? `
                    <div style="text-align: center; background: rgba(40,167,69,0.1); padding: 2px; border-radius: 3px; font-size: 11px; color: #000; font-weight: bold; margin: 2px 0; border: 1px solid #28a745;">
                        💰 Rp ${parseInt(price).toLocaleString('id-ID')}
                    </div>` : ''}
                    <div style="font-size: 6px; color: #000; text-align: center; margin-top: 2px;">
                        📡 CONNECT → 🌐 BROWSE → ⚡ LOGIN
                    </div>
                </div>
            `;
        }

        function getVoucherModelStyles(model) {
            const baseStyles = {
                voucherBorder: '2px solid #333',
                voucherBackground: '#fff',
                voucherColor: '#333',
                headerBackground: 'linear-gradient(135deg, #007bff, #0056b3)',
                headerColor: '#fff',
                credentialBackground: '#f8f9fa',
                credentialBorder: '#e9ecef',
                credentialColor: '#007bff'
            };

            switch (model) {
                case 'dark':
                    return {
                        ...baseStyles,
                        voucherBorder: '2px solid #333',
                        voucherBackground: 'linear-gradient(135deg, #2c3e50, #34495e)',
                        voucherColor: '#fff',
                        headerBackground: 'linear-gradient(135deg, #e74c3c, #c0392b)',
                        headerColor: '#fff',
                        credentialBackground: 'rgba(255,255,255,0.1)',
                        credentialBorder: 'rgba(255,255,255,0.2)',
                        credentialColor: '#f39c12'
                    };
                case 'gradient':
                    return {
                        ...baseStyles,
                        voucherBorder: '2px solid #8e44ad',
                        voucherBackground: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        voucherColor: '#fff',
                        headerBackground: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
                        headerColor: '#fff',
                        credentialBackground: 'rgba(255,255,255,0.2)',
                        credentialBorder: 'rgba(255,255,255,0.3)',
                        credentialColor: '#ffd700'
                    };
                case 'minimal':
                    return {
                        ...baseStyles,
                        voucherBorder: '3px solid #000',
                        voucherBackground: '#000',
                        voucherColor: '#fff',
                        headerBackground: '#fff',
                        headerColor: '#000',
                        credentialBackground: '#333',
                        credentialBorder: '#555',
                        credentialColor: '#00ff00'
                    };
                case 'neon':
                    return {
                        ...baseStyles,
                        voucherBorder: '2px solid #00ffff',
                        voucherBackground: 'linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%)',
                        voucherColor: '#00ffff',
                        headerBackground: 'linear-gradient(135deg, #ff006e, #8338ec)',
                        headerColor: '#fff',
                        credentialBackground: 'rgba(0,255,255,0.1)',
                        credentialBorder: '#00ffff',
                        credentialColor: '#00ff00'
                    };
                default: // classic
                    return baseStyles;
            }
        }

        function generateVouchers() {
            const profile = document.getElementById('voucherProfile').value;
            const count = parseInt(document.getElementById('voucherCount').value);
            const voucherType = document.getElementById('voucherType').value;
            const voucherFormat = document.getElementById('voucherFormat').value;
            const prefix = document.getElementById('voucherPrefix').value || '';
            const numberLength = getNumberLength();
            const passwordLength = parseInt(document.getElementById('voucherLength').value);
            const voucherModel = document.getElementById('voucherModel').value;
            const voucherPrice = document.getElementById('voucherPrice').value;
            const showPrice = document.getElementById('showPrice').checked;

            if (!profile || !count || count < 1 || count > 100) {
                AlijayaWeb.showToast('Please fill all required fields correctly', 'error');
                return;
            }

            // Validate number length
            if (numberLength < 1 || numberLength > 15) {
                AlijayaWeb.showToast('Panjang angka harus antara 1-15 digit', 'error');
                return;
            }

            // Validate price if show price is enabled
            if (showPrice && (!voucherPrice || parseInt(voucherPrice) < 0)) {
                AlijayaWeb.showToast('Harga voucher harus diisi dengan nilai yang valid', 'error');
                return;
            }

            AlijayaWeb.showToast('Generating vouchers to MikroTik...', 'info');

            fetch('/admin/api/hotspot/generate-vouchers', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    profile: profile,
                    count: count,
                    voucherType: voucherType,
                    voucherFormat: voucherFormat,
                    prefix: prefix,
                    numberLength: numberLength,
                    passwordLength: passwordLength,
                    voucherModel: voucherModel,
                    voucherPrice: showPrice ? parseInt(voucherPrice) : null,
                    showPrice: showPrice
                })
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    let message = `Generated ${data.vouchers.length} vouchers successfully`;
                    if (data.summary.failed > 0) {
                        message += ` (${data.summary.failed} failed)`;
                    }
                    AlijayaWeb.showToast(message, 'success');
                    bootstrap.Modal.getInstance(document.getElementById('generateVoucherModal')).hide();
                    showVoucherResults(data.vouchers, profile, data.summary);
                } else {
                    AlijayaWeb.showToast('Failed to generate vouchers: ' + (data.error || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                console.error('Generate error:', error);
                AlijayaWeb.showToast('Error generating vouchers: ' + error.message, 'error');
            });
        }

        function showVoucherResults(vouchers, profile, summary) {
            document.getElementById('resultProfile').textContent = profile;
            document.getElementById('resultCount').textContent = summary.success;

            // Update modal title
            const modalTitle = document.querySelector('#voucherResultModal .modal-title');
            modalTitle.textContent = 'Generated Vouchers - Ready to Print';

            // Clear previous alerts
            const existingAlerts = document.querySelectorAll('#voucherResultModal .alert');
            existingAlerts.forEach(alert => alert.remove());

            // Show success info
            const successInfo = document.createElement('div');
            successInfo.className = 'alert alert-success mt-2';
            let infoText = `<i class="bi bi-check-circle"></i> Successfully created ${summary.success} vouchers in MikroTik`;
            if (summary.failed > 0) {
                infoText += ` (${summary.failed} failed)`;
            }
            if (summary.price) {
                infoText += ` <br><i class="bi bi-currency-dollar"></i> Price: Rp ${parseInt(summary.price).toLocaleString('id-ID')} per voucher`;
            }
            successInfo.innerHTML = infoText;
            document.querySelector('#voucherResultModal .modal-body').prepend(successInfo);

            const voucherList = document.getElementById('voucherList');
            const isVoucherType = vouchers.length > 0 && vouchers[0].voucherType === 'voucher';

            let tableHTML = `
                <table class="table table-striped table-sm">
                    <thead>
                        <tr>
                            <th>No</th>
                            <th>${isVoucherType ? 'Voucher' : 'Username'}</th>
                            ${isVoucherType ? '' : '<th>Password</th>'}
                            <th>Profile</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            vouchers.forEach((voucher, index) => {
                const statusClass = voucher.status === 'created' ? 'bg-success' : 'bg-danger';
                const statusText = voucher.status === 'created' ? 'Created' : 'Failed';

                tableHTML += `
                    <tr>
                        <td>${index + 1}</td>
                        <td><strong>${voucher.username}</strong></td>
                        ${isVoucherType ? '' : `<td><code>${voucher.password}</code></td>`}
                        <td><span class="badge bg-info">${voucher.profile}</span></td>
                        <td><span class="badge ${statusClass}">${statusText}</span></td>
                    </tr>
                `;
            });

            tableHTML += `
                    </tbody>
                </table>
            `;

            voucherList.innerHTML = tableHTML;

            // Store vouchers for print/download
            window.generatedVouchers = vouchers;

            // Update footer buttons
            const footer = document.getElementById('voucherResultFooter');
            footer.innerHTML = `
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" onclick="printVouchers()">
                    <i class="bi bi-printer"></i> Print Vouchers
                </button>
                <button type="button" class="btn btn-outline-info" onclick="downloadVouchers()">
                    <i class="bi bi-download"></i> Download CSV
                </button>
            `;

            const modal = new bootstrap.Modal(document.getElementById('voucherResultModal'));
            modal.show();
        }

        function printVouchers() {
            if (!window.generatedVouchers) {
                AlijayaWeb.showToast('No vouchers to print', 'error');
                return;
            }

            const printWindow = window.open('', '_blank');
            const vouchers = window.generatedVouchers;
            const isVoucherType = vouchers.length > 0 && vouchers[0].voucherType === 'voucher';
            const voucherModel = vouchers.length > 0 ? vouchers[0].voucherModel || 'classic' : 'classic';

            // Get company info from settings (these should be passed from server)
            const companyHeader = '<%= settings?.company_header || "ISP Network" %>';
            const footerInfo = '<%= settings?.footer_info || "Terima kasih telah menggunakan layanan kami" %>';

            // Calculate optimal grid layout based on voucher count
            // A4 width ~21cm - 2cm margin = 19cm available
            // 6cm voucher + 0.5cm gap = 6.5cm per voucher
            // 19cm / 6.5cm = ~2.9, so max 3 columns for 6cm vouchers
            const voucherCount = vouchers.length;
            let columnsPerPage, vouchersPerPage;

            if (voucherCount <= 8) {
                columnsPerPage = 2; // 2x4 layout (safer for 6cm width)
                vouchersPerPage = 8;
            } else if (voucherCount <= 12) {
                columnsPerPage = 3; // 3x4 layout
                vouchersPerPage = 12;
            } else {
                columnsPerPage = 3; // 3x5 layout for more vouchers
                vouchersPerPage = 15;
            }

            // Get model-specific styles
            const modelStyles = getVoucherModelStyles(voucherModel);

            let printHTML = `
                <!DOCTYPE html>
                <html>
                <head>
                    <title>Hotspot Vouchers - ${companyHeader}</title>
                    <style>
                        @page {
                            size: A4;
                            margin: 10mm;
                        }

                        body {
                            font-family: 'Arial', sans-serif;
                            margin: 0;
                            padding: 0;
                            background: white;
                            font-size: 12px;
                        }

                        .voucher-grid {
                            display: grid;
                            grid-template-columns: repeat(var(--columns, 3), 6cm);
                            gap: 5mm; /* Jarak minimal untuk menggunting */
                            justify-content: center;
                            align-content: start;
                            width: 100%;
                            min-height: 100vh;
                            padding: 5mm;
                        }

                        .voucher {
                            border: 2px dashed #333;
                            border-radius: 6px;
                            padding: 6px;
                            width: 6cm;
                            height: 4cm;
                            background: white;
                            position: relative;
                            overflow: hidden;
                            page-break-inside: avoid;
                            box-sizing: border-box;
                            display: flex;
                            flex-direction: column;
                        }

                        .voucher-company {
                            text-align: center;
                            background: rgba(0,123,255,0.1);
                            color: #000;
                            padding: 2px 4px;
                            border-radius: 3px;
                            margin-bottom: 4px;
                            font-size: 9px;
                            font-weight: bold;
                            line-height: 1.1;
                            border: 1px solid #007bff;
                        }

                        .voucher-type {
                            text-align: center;
                            font-size: 10px;
                            font-weight: bold;
                            color: #000;
                            margin-bottom: 3px;
                            line-height: 1.1;
                        }

                        .voucher-content {
                            flex: 1;
                            display: flex;
                            flex-direction: column;
                            justify-content: center;
                        }

                        .credential-row {
                            display: flex;
                            justify-content: space-between;
                            align-items: center;
                            margin: 1px 0;
                            padding: 2px 4px;
                            background: rgba(248,249,250,0.3);
                            border-radius: 3px;
                            border: 1px solid #ddd;
                        }

                        .credential-label {
                            font-size: 8px;
                            color: #000;
                            font-weight: bold;
                        }

                        .credential-value {
                            font-family: 'Courier New', monospace;
                            font-weight: bold;
                            font-size: 10px;
                            color: #000;
                            letter-spacing: 0.3px;
                        }

                        .voucher-code-large {
                            font-size: 14px !important;
                            color: #000 !important;
                            text-align: center;
                            letter-spacing: 0.8px;
                            font-weight: bold !important;
                        }

                        .voucher-price {
                            text-align: center;
                            background: rgba(40,167,69,0.1);
                            color: #000;
                            padding: 3px 4px;
                            border-radius: 3px;
                            margin: 2px 0;
                            font-size: 12px;
                            font-weight: bold;
                            border: 1px solid #28a745;
                            line-height: 1.1;
                        }

                        .profile-info {
                            text-align: center;
                            margin: 2px 0;
                            padding: 1px;
                            background: rgba(227,242,253,0.2);
                            border-radius: 2px;
                            font-size: 8px;
                            color: #000;
                            font-weight: bold;
                            line-height: 1.1;
                            border: 1px solid #ccc;
                        }

                        .instructions {
                            margin-top: 2px;
                            padding: 2px 3px;
                            background: rgba(255,243,205,0.3);
                            border-radius: 2px;
                            border-left: 2px solid #ffc107;
                        }

                        .instructions-title {
                            font-size: 7px;
                            font-weight: bold;
                            color: #000;
                            margin: 0 0 1px 0;
                            line-height: 1.1;
                        }

                        .instructions-list {
                            font-size: 6px;
                            color: #000;
                            margin: 0;
                            padding-left: 8px;
                            line-height: 1.1;
                        }

                        .voucher-footer {
                            text-align: center;
                            margin-top: 2px;
                            padding-top: 2px;
                            border-top: 1px solid #e9ecef;
                            font-size: 6px;
                            color: #000;
                            line-height: 1.1;
                        }

                        .company-footer {
                            font-size: 5px;
                            color: #000;
                            margin-top: 1px;
                        }

                        @media print {
                            @page {
                                size: A4;
                                margin: 10mm;
                            }

                            body {
                                background: white !important;
                                -webkit-print-color-adjust: exact;
                                print-color-adjust: exact;
                                margin: 0;
                                padding: 0;
                            }

                            .voucher-grid {
                                display: grid;
                                grid-template-columns: repeat(var(--columns, 3), 6cm);
                                gap: 5mm;
                                justify-content: center;
                                align-content: start;
                                width: 100%;
                                height: auto;
                                padding: 5mm;
                                page-break-inside: avoid;
                            }

                            .voucher {
                                box-shadow: none;
                                border: 2px dashed #333 !important;
                                width: 6cm !important;
                                height: 4cm !important;
                                page-break-inside: avoid;
                                margin: 0;
                            }

                            /* Page break dinamis berdasarkan layout */
                            .voucher:nth-child(${vouchersPerPage}n) {
                                page-break-after: always;
                            }
                        }
                    </style>
                </head>
                <body style="--columns: ${columnsPerPage};">
                    <div class="voucher-grid">
            `;

            vouchers.forEach((voucher, index) => {
                printHTML += `
                    <div class="voucher">
                        <div class="voucher-company">${companyHeader}</div>
                        <div class="voucher-type">${isVoucherType ? 'VOUCHER INTERNET' : 'AKUN INTERNET'}</div>

                        <div class="voucher-content">
                `;

                if (isVoucherType) {
                    printHTML += `
                            <div class="credential-row">
                                <span class="credential-label">KODE VOUCHER:</span>
                                <span class="credential-value voucher-code-large">${voucher.username}</span>
                            </div>
                            <div class="profile-info">Paket: ${voucher.profile}</div>
                            ${voucher.price ? `<div class="voucher-price">💰 Rp ${parseInt(voucher.price).toLocaleString('id-ID')}</div>` : ''}

                            <div class="instructions">
                                <div class="instructions-title">Cara Login:</div>
                                <ol class="instructions-list">
                                    <li>Hubungkan ke WiFi Hotspot</li>
                                    <li>Buka browser, masukkan kode di Username & Password</li>
                                    <li>Klik Login</li>
                                </ol>
                            </div>
                    `;
                } else {
                    printHTML += `
                            <div class="credential-row">
                                <span class="credential-label">USERNAME:</span>
                                <span class="credential-value voucher-code-large">${voucher.username}</span>
                            </div>
                            <div class="credential-row">
                                <span class="credential-label">PASSWORD:</span>
                                <span class="credential-value voucher-code-large">${voucher.password}</span>
                            </div>
                            <div class="profile-info">Paket: ${voucher.profile}</div>
                            ${voucher.price ? `<div class="voucher-price">💰 Rp ${parseInt(voucher.price).toLocaleString('id-ID')}</div>` : ''}

                            <div class="instructions">
                                <div class="instructions-title">Cara Login:</div>
                                <ol class="instructions-list">
                                    <li>Hubungkan ke WiFi Hotspot</li>
                                    <li>Buka browser, masukkan Username & Password</li>
                                    <li>Klik Login</li>
                                </ol>
                            </div>
                    `;
                }

                printHTML += `
                        </div>

                        <div class="voucher-footer">
                            <div>Berlaku sesuai paket | ${new Date().toLocaleDateString('id-ID')}</div>
                            <div class="company-footer">${footerInfo}</div>
                        </div>
                    </div>
                `;
            });

            printHTML += `
                    </div>
                </body>
                </html>
            `;

            printWindow.document.write(printHTML);
            printWindow.document.close();
            printWindow.print();
        }

        function downloadVouchers() {
            if (!window.generatedVouchers) {
                AlijayaWeb.showToast('No vouchers to download', 'error');
                return;
            }

            const vouchers = window.generatedVouchers;
            const isVoucherType = vouchers.length > 0 && vouchers[0].voucherType === 'voucher';

            let csvContent = isVoucherType ?
                "No,Voucher,Profile,Type,Created\n" :
                "No,Username,Password,Profile,Type,Created\n";

            vouchers.forEach((voucher, index) => {
                if (isVoucherType) {
                    csvContent += `${index + 1},${voucher.username},${voucher.profile},Voucher,${new Date().toLocaleDateString()}\n`;
                } else {
                    csvContent += `${index + 1},${voucher.username},${voucher.password},${voucher.profile},User+Password,${new Date().toLocaleDateString()}\n`;
                }
            });

            const blob = new Blob([csvContent], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `hotspot-vouchers-${new Date().toISOString().split('T')[0]}.csv`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);

            AlijayaWeb.showToast('Vouchers downloaded successfully', 'success');
        }

        function addHotspotUser() {
            const username = document.getElementById('hotspotUsername').value;
            const password = document.getElementById('hotspotPassword').value;
            const profile = document.getElementById('hotspotProfile').value;
            const server = document.getElementById('hotspotServer').value;

            if (!username || !password || !profile) {
                AlijayaWeb.showToast('Please fill all required fields', 'error');
                return;
            }

            AlijayaWeb.showToast('Adding hotspot user...', 'info');

            fetch('/admin/api/hotspot/users', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: username,
                    password: password,
                    profile: profile,
                    server: server
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    AlijayaWeb.showToast('Hotspot user added successfully', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('addHotspotModal')).hide();
                    setTimeout(() => location.reload(), 1000);
                } else {
                    AlijayaWeb.showToast('Failed to add user: ' + (data.error || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                AlijayaWeb.showToast('Error adding user: ' + error.message, 'error');
            });
        }

        function editHotspotUser(username) {
            // Fetch user details and populate edit modal
            fetch('/admin/api/hotspot/users/' + encodeURIComponent(username))
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.user) {
                        document.getElementById('editHotspotId').value = username;
                        document.getElementById('editHotspotUsername').value = username;
                        document.getElementById('editHotspotProfile').value = data.user.profile || 'default';
                        document.getElementById('editHotspotDisabled').checked = data.user.disabled === 'true';

                        const modal = new bootstrap.Modal(document.getElementById('editHotspotModal'));
                        modal.show();
                    } else {
                        AlijayaWeb.showToast('Failed to load user details', 'error');
                    }
                })
                .catch(error => {
                    AlijayaWeb.showToast('Error loading user: ' + error.message, 'error');
                });
        }

        function updateHotspotUser() {
            const username = document.getElementById('editHotspotId').value;
            const password = document.getElementById('editHotspotPassword').value;
            const profile = document.getElementById('editHotspotProfile').value;
            const disabled = document.getElementById('editHotspotDisabled').checked;

            AlijayaWeb.showToast('Updating hotspot user...', 'info');

            const updateData = {
                profile: profile,
                disabled: disabled
            };

            if (password) {
                updateData.password = password;
            }

            fetch('/admin/api/hotspot/users/' + encodeURIComponent(username), {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updateData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    AlijayaWeb.showToast('Hotspot user updated successfully', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('editHotspotModal')).hide();
                    setTimeout(() => location.reload(), 1000);
                } else {
                    AlijayaWeb.showToast('Failed to update user: ' + (data.error || 'Unknown error'), 'error');
                }
            })
            .catch(error => {
                AlijayaWeb.showToast('Error updating user: ' + error.message, 'error');
            });
        }

        function deleteHotspotUser(username) {
            if (confirm('Are you sure you want to delete user: ' + username + '?')) {
                AlijayaWeb.showToast('Deleting hotspot user...', 'warning');

                fetch('/admin/api/hotspot/users/' + encodeURIComponent(username), {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        AlijayaWeb.showToast('Hotspot user deleted successfully', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        AlijayaWeb.showToast('Failed to delete user: ' + (data.error || 'Unknown error'), 'error');
                    }
                })
                .catch(error => {
                    AlijayaWeb.showToast('Error deleting user: ' + error.message, 'error');
                });
            }
        }

        function disconnectHotspotUser(username) {
            if (confirm('Are you sure you want to disconnect user: ' + username + '?')) {
                AlijayaWeb.showToast('Disconnecting hotspot user...', 'warning');

                fetch('/admin/api/hotspot/users/' + encodeURIComponent(username) + '/disconnect', {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        AlijayaWeb.showToast('User disconnected successfully', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        AlijayaWeb.showToast('Failed to disconnect user: ' + (data.error || 'Unknown error'), 'error');
                    }
                })
                .catch(error => {
                    AlijayaWeb.showToast('Error disconnecting user: ' + error.message, 'error');
                });
            }
        }

        // Update system info in sidebar
        function updateSystemInfo() {
            fetch('/admin/api/stats')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('systemUptime').textContent = '15d 8h';
                    document.getElementById('systemMemory').textContent = '45%';
                    document.getElementById('systemCPU').textContent = '25%';
                })
                .catch(error => {
                    console.error('Error updating system info:', error);
                });
        }

        // Update hotspot stats with real data
        function updateHotspotStats() {
            fetch('/admin/api/hotspot/stats')
                .then(response => response.json())
                .then(data => {
                    // Update statistics cards
                    const activeUsersElement = document.getElementById('activeHotspotUsers');
                    const totalUsersElement = document.getElementById('totalHotspotUsers');

                    if (activeUsersElement) {
                        activeUsersElement.textContent = data.activeUsers || 0;
                    }
                    if (totalUsersElement) {
                        totalUsersElement.textContent = data.totalUsers || 0;
                    }

                    console.log('Hotspot stats updated:', data);
                })
                .catch(error => {
                    console.error('Error updating hotspot stats:', error);
                });
        }

        // Hotspot User Search Functions
        function handleHotspotSearchKeyPress(event) {
            if (event.key === 'Enter') {
                searchHotspotUser();
            }
        }

        function searchHotspotUser() {
            const username = document.getElementById('searchHotspotUsername').value.trim();
            if (!username) {
                AlijayaWeb.showToast('Please enter a username to search', 'warning');
                return;
            }

            AlijayaWeb.showToast('Searching for user...', 'info');

            // Hide all sections first
            document.getElementById('hotspotSearchResults').style.display = 'none';
            document.getElementById('hotspotAllUsersList').style.display = 'none';
            document.getElementById('hotspotNoResults').style.display = 'none';

            // Search from all users
            fetch('/admin/api/hotspot/all-users')
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.users) {
                        // Filter users by username (case insensitive)
                        const filteredUsers = data.users.filter(user =>
                            user.name.toLowerCase().includes(username.toLowerCase())
                        );

                        if (filteredUsers.length > 0) {
                            displayHotspotSearchResults(filteredUsers);
                            AlijayaWeb.showToast(`Found ${filteredUsers.length} user(s)`, 'success');
                        } else {
                            document.getElementById('hotspotNoResults').style.display = 'block';
                            AlijayaWeb.showToast('User not found', 'warning');
                        }
                    } else {
                        document.getElementById('hotspotNoResults').style.display = 'block';
                        AlijayaWeb.showToast('Failed to search users', 'error');
                    }
                })
                .catch(error => {
                    console.error('Search error:', error);
                    document.getElementById('hotspotNoResults').style.display = 'block';
                    AlijayaWeb.showToast('Search failed: ' + error.message, 'error');
                });
        }

        function loadAllHotspotUsers() {
            AlijayaWeb.showToast('Loading all hotspot users...', 'info');

            // Hide all sections first
            document.getElementById('hotspotSearchResults').style.display = 'none';
            document.getElementById('hotspotAllUsersList').style.display = 'none';
            document.getElementById('hotspotNoResults').style.display = 'none';

            // Load all users using comprehensive API
            fetch('/admin/api/hotspot/all-users')
                .then(response => response.json())
                .then(data => {
                    if (data.success && data.users) {
                        if (data.users.length > 0) {
                            displayAllHotspotUsers(data.users);
                            AlijayaWeb.showToast(
                                `Found ${data.totalUsers} users (${data.activeUsers} active, ${data.offlineUsers} offline)`,
                                'success'
                            );
                        } else {
                            document.getElementById('hotspotNoResults').style.display = 'block';
                            AlijayaWeb.showToast('No hotspot users found', 'warning');
                        }
                    } else {
                        document.getElementById('hotspotNoResults').style.display = 'block';
                        AlijayaWeb.showToast('Failed to load users', 'error');
                    }
                })
                .catch(error => {
                    console.error('Load all users error:', error);
                    document.getElementById('hotspotNoResults').style.display = 'block';
                    AlijayaWeb.showToast('Failed to load users: ' + error.message, 'error');
                });
        }

        function displayHotspotSearchResults(users) {
            const tbody = document.getElementById('hotspotSearchResultsBody');
            tbody.innerHTML = '';

            users.forEach(user => {
                const row = createHotspotUserRow(user);
                tbody.appendChild(row);
            });

            document.getElementById('hotspotSearchResults').style.display = 'block';
        }

        function displayAllHotspotUsers(users) {
            const tbody = document.getElementById('hotspotAllUsersBody');
            tbody.innerHTML = '';

            users.forEach(user => {
                const row = createHotspotUserRow(user);
                tbody.appendChild(row);
            });

            document.getElementById('hotspotAllUsersList').style.display = 'block';
        }

        function createHotspotUserRow(user) {
            const row = document.createElement('tr');
            const username = user.name || user.username || 'Unknown';
            const profile = user.profile || 'default';
            const status = user.status || (user.isActive ? 'Active' : 'Offline');
            const lastLogin = user.lastLogin || user.uptime || 'N/A';

            // Add disabled status if user is disabled
            const isDisabled = user.disabled === true || user.disabled === 'true';
            const displayStatus = isDisabled ? 'Disabled' : status;
            const statusClass = isDisabled ? 'bg-warning' : (status === 'Active' ? 'bg-success' : 'bg-secondary');

            row.innerHTML = `
                <td>
                    <strong>${username}</strong>
                    ${user.comment ? `<br><small class="text-muted">${user.comment}</small>` : ''}
                    ${user.address ? `<br><small class="text-info">IP: ${user.address}</small>` : ''}
                </td>
                <td><span class="badge bg-info">${profile}</span></td>
                <td>
                    <span class="badge ${statusClass}">
                        ${displayStatus}
                    </span>
                    ${user.server ? `<br><small class="text-muted">Server: ${user.server}</small>` : ''}
                </td>
                <td>
                    ${lastLogin}
                    ${user.macAddress ? `<br><small class="text-muted">MAC: ${user.macAddress}</small>` : ''}
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button class="btn btn-sm btn-outline-primary" onclick="editHotspotUser('${username}')" title="Edit User">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-sm btn-outline-danger" onclick="deleteHotspotUser('${username}')" title="Delete User">
                            <i class="bi bi-trash"></i>
                        </button>
                        ${status === 'Active' && !isDisabled ? `
                            <button class="btn btn-sm btn-outline-warning" onclick="disconnectHotspotUser('${username}')" title="Disconnect">
                                <i class="bi bi-plug"></i>
                            </button>
                        ` : ''}
                        ${isDisabled ? `
                            <button class="btn btn-sm btn-outline-success" onclick="enableHotspotUser('${username}')" title="Enable User">
                                <i class="bi bi-check-circle"></i>
                            </button>
                        ` : `
                            <button class="btn btn-sm btn-outline-secondary" onclick="disableHotspotUser('${username}')" title="Disable User">
                                <i class="bi bi-x-circle"></i>
                            </button>
                        `}
                    </div>
                </td>
            `;

            return row;
        }

        function enableHotspotUser(username) {
            if (confirm(`Are you sure you want to enable user: ${username}?`)) {
                AlijayaWeb.showToast('Enabling user...', 'info');

                fetch('/admin/api/hotspot/users/' + encodeURIComponent(username) + '/enable', {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        AlijayaWeb.showToast('User enabled successfully', 'success');
                        refreshHotspotCurrentView();
                    } else {
                        AlijayaWeb.showToast('Failed to enable user: ' + (data.error || 'Unknown error'), 'error');
                    }
                })
                .catch(error => {
                    AlijayaWeb.showToast('Error enabling user: ' + error.message, 'error');
                });
            }
        }

        function disableHotspotUser(username) {
            if (confirm(`Are you sure you want to disable user: ${username}?`)) {
                AlijayaWeb.showToast('Disabling user...', 'warning');

                fetch('/admin/api/hotspot/users/' + encodeURIComponent(username) + '/disable', {
                    method: 'POST'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        AlijayaWeb.showToast('User disabled successfully', 'success');
                        refreshHotspotCurrentView();
                    } else {
                        AlijayaWeb.showToast('Failed to disable user: ' + (data.error || 'Unknown error'), 'error');
                    }
                })
                .catch(error => {
                    AlijayaWeb.showToast('Error disabling user: ' + error.message, 'error');
                });
            }
        }

        function refreshHotspotCurrentView() {
            // Refresh the current view based on what's visible
            if (document.getElementById('hotspotSearchResults').style.display !== 'none') {
                searchHotspotUser();
            } else if (document.getElementById('hotspotAllUsersList').style.display !== 'none') {
                loadAllHotspotUsers();
            }
        }

        // Initial load
        updateSystemInfo();
        updateHotspotStats();

        // Add event listeners for voucher preview updates
        document.getElementById('voucherModel').addEventListener('change', updateVoucherPreview);
        document.getElementById('voucherType').addEventListener('change', updateVoucherPreview);
        document.getElementById('voucherFormat').addEventListener('change', updateVoucherPreview);
        document.getElementById('voucherPrice').addEventListener('input', updateVoucherPreview);
        document.getElementById('showPrice').addEventListener('change', updateVoucherPreview);

        // Auto-refresh every 30 seconds
        setInterval(() => {
            updateSystemInfo();
            updateHotspotStats();
            console.log('Auto-refreshing hotspot data...');
        }, 30000);
    </script>
</body>
</html>
